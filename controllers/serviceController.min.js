// @ts-nocheck
const bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken"),User=require("../models/User"),Role=require("../models/Role"),axios=require("axios"),Sport=require("../models/Sport"),{generateAccessToken:generateAccessToken,generateRefreshToken:generateRefreshToken}=require("../config/jwt"),EventList=require("../models/EventList"),mongoose=require("mongoose"),SpotRadarEvent=require("../models/SpotRadarEvent"),BetfairMarketlist=require("../models/BetfairMarketlist"),BetfairMarketOdds=require("../models/BetfairMarketOdds"),BetfairMarketResult=require("../models/MarketResult");exports.sportList=async(e,t)=>{try{const e=await Sport.find().sort({position:1});return t.status(200).json({message:"All sports fetched successfully",data:e})}catch(e){return console.error("Error fetching sports:",e.message),t.status(500).json({message:"Failed to fetch sports",error:e.message})}},exports.getEvents=async(e,t)=>{try{const{fastOddsId:s}=e.params;if(!s||!mongoose.Types.ObjectId.isValid(s))return t.status(400).json({message:"Valid fastOddsId parameter is required."});const r=new mongoose.Types.ObjectId(s),a=await EventList.findOne({FastoddsId:r}).sort({timestamp:-1}),n=await SpotRadarEvent.findOne({FastoddsId:r});if(!a||!n)return t.status(404).json({message:"Event data not found for the provided FastoddsId."});const o=a.betfairEventList.events||[],i=n.spotradardeventlist||[],d=e=>{if(!e)return"";return e.toLowerCase().replace(/[@]| at | v[.]?s?[.]? | vs[.]?/gi," vs ").replace(/[^a-z0-9\s]/gi,"").split("vs").map((e=>e.trim())).sort().join(" vs ")},u=new Set,m=o.map((e=>{const t=d(e.name||"");console.log(`normalizedBetfairName: "${t}"`);let s=null;for(const r of i){const a=d(r.eventName||"");if(console.log(`🟡 Comparing:\n  Betfair: "${e.name}" → "${t}"\n  Sportradar: "${r.eventName}" → "${a}"`),t===a){console.log(`✅ Matched: "${r.eventId}" -- ${e.name}" == "${r.eventName}"`),s=r,u.add(r.eventId);break}}return{event_name:e.name,event_date:e.event_date,status:s?.status||0,betfair_event_id:e.event_id,betfair_sport_id:e.sportId,spotradarSportId:s?.sportId||0,spotradarEventId:s?.eventId||0,...e,sportradarEventDetails:s||0}})),c=i.filter((e=>!u.has(e.eventId))).map((e=>({event_name:e.eventName,event_date:new Date(e.openDate).toISOString(),status:e.status,betfair_event_id:0,betfair_sport_id:0,spotradarSportId:e.sportId,spotradarEventId:e.eventId,isFancy:"",isBM:"",isPremium:"",score:!0,tv:!1,position:1,sportradarEventDetails:e}))),l=[...m,...c];return t.status(200).json({message:"Events fetched and enriched successfully.",data:l})}catch(e){return console.error("❌ Error fetching events:",e),t.status(500).json({message:"Failed to fetch events.",error:e.message})}},exports.getBetfairMarketByEventsId=async(e,t)=>{try{const{sportId:s,eventId:r}=e.params;if(!s||!r)return t.status(400).json({status:0,message:"Missing sportId or eventId"});const a=await BetfairMarketlist.findOne({FastoddsId:s,betfair_event_id:r});return a?t.status(200).json({status:1,FastoddsId:a.FastoddsId,sportId:s,eventId:r,marketList:a.marketList}):t.status(404).json({status:0,message:"No market data found for the given sportId and eventId"})}catch(e){return console.error("Error in getBetfairMarketByEventsId:",e),t.status(500).json({success:!1,message:"Internal server error"})}},exports.getBetfairMarketOddsByEventsId=async(e,t)=>{try{const{eventId:s}=e.params;if(!s)return t.status(400).json({status:0,message:"Missing eventId"});const r=await BetfairMarketOdds.findOne({betfair_event_id:s});if(!r||!r.marketOdds||0===r.marketOdds.length)return t.status(400).json({status:0,message:"No odds found for this event"});const a=await BetfairMarketlist.findOne({betfair_event_id:s}),n={};if(a&&a.marketList)for(const e of a.marketList)n[e.marketId]={marketName:e.marketName,runnersMap:(e.runners||[]).reduce(((e,t)=>(e[t.selectionId]=t.runnerName,e)),{})};const o=r.marketOdds.map((e=>{const t=n[e.marketId]||{};return{marketName:t.marketName||"Match Odds",...e,runners:(e.runners||[]).map((e=>({runnerName:t.runnersMap?.[e.selectionId]||null,...e})))}}));return t.status(200).json({status:1,message:"Market odds found for this event",betfair_event_id:s,marketOdds:o})}catch(e){return console.error("Error in getBetfairMarketOddsByEventsId:",e),t.status(500).json({status:0,message:"Internal server error"})}},exports.liveBetfairMarketsOddsByParams=async(e,t)=>{try{const{sportId:s,eventId:r}=e.params;if(!s||!r)return t.status(400).json({error:"sportId and eventId are required in params"});const a=await BetfairMarketlist.find({betfair_event_id:r});if(!a.length)return t.status(404).json({error:"No market records found for the given eventId"});const n=a.map((e=>e.marketList?.[0]?.marketId)).filter(Boolean);if(!n.length)return t.status(404).json({error:"No valid marketIds found in market records"});const o=n.join(",");console.log("Sending marketIds:",o);const i=await axios.post("https://exchmarket.net/exchangeapi/sports/directmarketsbook",o,{headers:{"Content-Type":"application/json"}}),d=i.data?.result||[];t.status(200).json({status:1,marketCount:n.length,result:d})}catch(e){console.error("Error fetching market odds:",e.message),t.status(500).json({error:e.message})}},exports.getBetfairMarketResultsByIds=async(e,t)=>{try{const{marketId:s}=e.body;if(!s)return t.status(400).json({status:0,message:"marketId parameter is required"});const r=s.split(",").map((e=>e.trim()));if(r.length>30)return t.status(400).json({status:0,message:"Maximum 30 market IDs are allowed per request"});const a=await BetfairMarketResult.find({marketId:{$in:r}});return a&&0!==a.length?t.status(200).json({status:1,message:"Market results retrieved successfully",data:a}):t.status(404).json({status:0,message:"No market results found for the given IDs"})}catch(e){return console.error("Error in getBetfairMarketResultsByIds:",e.message),t.status(500).json({status:0,message:"Internal server error",error:e.message})}},exports.getBetfairMarketResultsByEventId=async(e,t)=>{try{const{eventId:s}=e.params;if(!s)return t.status(400).json({status:0,message:"eventId parameter is required"});const r=await BetfairMarketResult.find({betfair_event_id:s},{_id:0,marketId:1,betfair_event_id:1,runners:1});if(!r||0===r.length)return t.status(404).json({status:0,message:"No market result found for the given eventId"});const a=await BetfairMarketlist.findOne({betfair_event_id:s}),n={};if(a&&a.marketList)for(const e of a.marketList)n[e.marketId]={marketName:e.marketName,runnersMap:(e.runners||[]).reduce(((e,t)=>(e[t.selectionId]={runnerName:t.runnerName,sortPriority:t.sortPriority},e)),{})};const o=r.map((e=>{const t=n[e.marketId]||{};return{marketId:e.marketId,marketName:t.marketName||null,runners:(e.runners||[]).map((e=>{const s=t.runnersMap?.[e.selectionId]||{};return{selectionId:e.selectionId,runnerName:s.runnerName||null,sortPriority:s.sortPriority||null,status:e.status,isWinner:e.isWinner}}))}}));return t.status(200).json({status:1,message:"Market results retrieved successfully",betfair_event_id:s,data:o})}catch(e){return console.error("Error in getBetfairMarketResultsByEventId:",e.message),t.status(500).json({status:0,message:"Internal server error",error:e.message})}};