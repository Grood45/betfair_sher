// @ts-nocheck
const User=require("../models/User"),Sport=require("../models/Sport"),Match=require("../models/Match"),moment=require("moment-timezone"),currentISTTime=moment().tz("Asia/Kolkata").toDate();exports.getDashboardStats=async(t,e)=>{try{const t=moment().tz("Asia/Kolkata").toDate(),a=moment().tz("Asia/Kolkata").startOf("day").toDate(),o=moment().tz("Asia/Kolkata").endOf("day").toDate(),s=moment(a).add(1,"day").toDate(),r=moment(o).add(1,"day").toDate(),[m,n,c,d]=await Promise.all([Sport.countDocuments(),Match.countDocuments({event_date:{$lte:t}}),Match.countDocuments({event_date:{$gte:a,$lte:o}}),Match.countDocuments({event_date:{$gte:s,$lte:r}})]);e.status(200).json({message:"Dashboard statistics fetched successfully",data:{allSports:m,inPlayCount:n,today:c,tomorrow:d,totalBets:0,totalAmount:0}})}catch(t){console.error("Dashboard error:",t.message),e.status(500).json({message:"Failed to fetch dashboard stats",error:t.message})}};