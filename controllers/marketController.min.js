// @ts-nocheck
const Marketlimit=require("../models/Marketlimit");exports.getAllLimits=async(t,e)=>{try{const t=await Marketlimit.find().sort({marketType:1});e.status(200).json({message:"Market limits fetched successfully",data:t})}catch(t){e.status(500).json({message:"Failed to fetch market limits",error:t.message})}},exports.createOrUpdateLimit=async(t,e)=>{try{const{marketType:s,minBet:a,maxBet:i,maxProfit:r}=t.body;if(!(s&&a&&i&&r))return e.status(400).json({message:"All fields are required"});const m=await Marketlimit.findOneAndUpdate({marketType:s},{minBet:a,maxBet:i,maxProfit:r},{new:!0,upsert:!0});e.status(200).json({message:"Market limit saved successfully",data:m})}catch(t){e.status(500).json({message:"Failed to save market limit",error:t.message})}};