// @ts-nocheck
const bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken"),User=require("../models/User"),Role=require("../models/Role"),axios=require("axios"),Sport=require("../models/Sport"),{generateAccessToken:generateAccessToken,generateRefreshToken:generateRefreshToken}=require("../config/jwt"),EventList=require("../models/EventList");exports.sportList=async(t,e)=>{const s={"X-Application":"fslpapQyGZSmkZW3","X-Authentication":"FnY1o16yM53LM7dYWk6aE1oD4RuzoReewegst5yJtbk=","Content-Type":"application/json"},r=[{jsonrpc:"2.0",method:"SportsAPING/v1.0/listEventTypes",params:{filter:{}},id:1}],o={operatorId:"laser247",providerId:"SportRadar",token:"c0e509b0-6bc1-4132-80cb-71b54345af12"};try{const[t,a]=await Promise.all([axios.post("https://api.betfair.com/exchange/betting/json-rpc/v1",r,{headers:s}),axios.post("https://scatalog.mysportsfeed.io/api/v1/core/getsports",o)]),n=t.data[0]?.result||[],i=a.data?.sports||[],c={},p={};for(const t of n){c[t.eventType.name.trim().toLowerCase()]=t}for(const t of i){p[t.sportName.trim().toLowerCase()]=t}const d=new Set([...Object.keys(c),...Object.keys(p)]);let l=await Sport.findOne().sort("-position").select("position"),m=l?.position?l.position+1:1;for(const t of d){const e=t.charAt(0).toUpperCase()+t.slice(1),s=c[t]||null,r=p[t]||null,o=await Sport.findOne({sportName:new RegExp(`^${e}$`,"i")});if(o)o.betfairSportList=s,o.sportradarSportList=r,o.timestamp=new Date,o.status=1,await o.save();else{const t=new Sport({sportName:e,position:m++,betfairSportList:s?{isFound:1,message:"Sport found from Betfair",...s}:{isFound:0,message:"No sport found from Betfair"},sportradarSportList:r?{isFound:1,message:"Sport found from Sportradar",...r}:{isFound:0,message:"No sport found from Sportradar"},isBettingEnabled:!1,status:1});await t.save()}}return e.status(200).json({message:"All sports from Betfair and Sportradar synced successfully."})}catch(t){return console.error("Sync error:",t.message),e.status(500).json({message:"Failed to sync sports",error:t.response?.data||t.message})}},exports.getEventsList=async(t,e)=>{const s="https://api.betfair.com/exchange/betting/json-rpc/v1",r=require("axios");try{const t=await Sport.find({betfairSportList:{$ne:null}});for(const e of t){const t=e.betfairSportList?.eventType?.id;if(!t)continue;const o={"X-Application":"fslpapQyGZSmkZW3","X-Authentication":"FnY1o16yM53LM7dYWk6aE1oD4RuzoReewegst5yJtbk=","Content-Type":"application/json"},a=[{jsonrpc:"2.0",method:"SportsAPING/v1.0/listEvents",params:{filter:{eventTypeIds:[t],marketStartTime:{from:(new Date).toISOString()}}},id:1}];let n=[],i=0,c="No event found from Betfair";try{const t=await r.post(s,a,{headers:o});n=t.data[0]?.result||[],n.length>0&&(i=1,c="Events fetched successfully")}catch(t){console.error("Error fetching events:",t.message)}const p=[{jsonrpc:"2.0",method:"SportsAPING/v1.0/listCompetitions",params:{filter:{eventTypeIds:[t]}},id:2}];let d={};try{const t=await r.post(s,p,{headers:o});(t.data[0]?.result||[]).forEach((t=>{d[t.competition.id]=t.competition.name}))}catch(t){console.error("Error fetching competitions:",t.message)}const l=[];for(const e of n){const a=e.event;let n=null,i=null;try{const t=[{jsonrpc:"2.0",method:"SportsAPING/v1.0/listMarketCatalogue",params:{filter:{eventIds:[a.id],marketTypeCodes:["MATCH_ODDS"]},maxResults:"1",marketProjection:["COMPETITION"]},id:3}],e=await r.post(s,t,{headers:o}),c=e.data[0]?.result||[];if(c.length>0){n=c[0];const t=[{jsonrpc:"2.0",method:"SportsAPING/v1.0/listMarketBook",params:{marketIds:[n.marketId],priceProjection:{priceData:["EX_BEST_OFFERS"]}},id:4}],e=await r.post(s,t,{headers:o}),a=e.data[0]?.result||[];a.length>0&&(i=a[0])}}catch(t){console.error(`Market data fetch failed for event ${a.id}:`,t.message)}let c=0;if(Array.isArray(i)){const t=i[0];c={marketId:t?.marketId||"",status:t?.status||"",totalMatched:t?.totalMatched||0,runners:Array.isArray(t.runners)?t.runners:[]}}else c="object"==typeof i&&null!==i?{marketId:i.marketId||"",status:i.status||"",totalMatched:i.totalMatched||0,runners:Array.isArray(i.runners)?i.runners:[]}:0;l.push({sportId:t||0,event_id:a.id,name:a.name,event_date:a.openDate,timezone:a.timezone||null,countryCode:a.countryCode||null,isinplay:!0===a.inPlay||new Date(a.openDate)<=new Date?"true":"false",isFancy:"",isBM:"",isPremium:"",score:!0,tv:!1,total_matched:Array.isArray(n)?n[0]?.totalMatched||0:n?.totalMatched||0,position:1,market_count:3,competition:Array.isArray(n)?n[0]?.competition||0:n?.competition||0,marketOdds:c})}const m=await EventList.findOne({sportId:e._id}),u={isFound:i,message:c,events:l};if(m)m.betfairEventList=u,m.timestamp=new Date,await m.save();else{const t=new EventList({FastoddsId:e._id,betfairEventList:u,sportradarEventList:{isFound:0,message:"Sportradar events not fetched yet",events:[]},status:1});await t.save()}}return e.status(200).json({message:"Betfair event list synced successfully for all sports."})}catch(t){return console.error("Event sync error:",t.message),e.status(500).json({message:"Failed to sync Betfair events",error:t.response?.data||t.message})}};