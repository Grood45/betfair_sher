// @ts-nocheck
const bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken"),User=require("../models/User"),Role=require("../models/Role"),axios=require("axios"),Sport=require("../models/Sport"),{generateAccessToken:generateAccessToken,generateRefreshToken:generateRefreshToken}=require("../config/jwt"),EventList=require("../models/EventList"),SpotRadarEvent=require("../models/SpotRadarEvent");exports.fetchAndStoreSportradarEvents=async(t,e)=>{try{const t="ca5822fe-b4f8-4251-b72d-b3b4bfe4b133",s=await Sport.find({});for(const e of s){const s=e?.sportradarSportList?.sportId,o=e?._id;if(!s||!o)continue;let r=[];for(const e of[!0,!1]){const o=await axios.post("https://scatalog.mysportsfeed.io/api/v1/core/sr-events-count",{operatorId:"99hub",providerId:"sportsbook",partnerId:"HBPID01",isInplay:e,sportId:s,token:t}),a=o?.data?.itemsCount?.find((t=>t.sportId===s)),n=a?.total||0,i=Math.ceil(n/20);console.log(`Sport: ${s} | Inplay: ${e} | Total Events: ${n} | Pages: ${i}`);for(let o=1;o<=i;o++){const a=await axios.post("https://scatalog.mysportsfeed.io/api/v2/core/getevents",{operatorId:"99hub",providerId:"sportsbook",partnerId:"HBPID01",sportId:s,token:t,isInplay:e,pageNo:o}),n=a?.data?.sports||[];if(console.log(`Fetched ${n.length} events (inplay: ${e}) from page ${o}`),0===n.length)break;const i=n.map((t=>({...t,isInplay:e})));r.push(...i)}}await SpotRadarEvent.findOneAndUpdate({FastoddsId:new mongoose.Types.ObjectId(o)},{radarSportId:s,spotradardeventlist:r},{upsert:!0,new:!0}),console.log(`Saved ${r.length} total events for sportId ${s}`)}e.status(200).json({message:"Sportradar events (inplay & non-inplay) fetched and stored successfully."})}catch(t){console.error("Error:",t),e.status(500).json({message:"Internal server error",error:t.message})}},exports.sportList=async(t,e)=>{const s={"X-Application":"fslpapQyGZSmkZW3","X-Authentication":"tXvPCalpouNSP2DpzapbCqNNDMLbl12iuc65vcg8Zf0=","Content-Type":"application/json"},o=[{jsonrpc:"2.0",method:"SportsAPING/v1.0/listEventTypes",params:{filter:{}},id:1}],r={operatorId:"laser247",providerId:"SportRadar",token:"c0e509b0-6bc1-4132-80cb-71b54345af12"};try{const[t,a]=await Promise.all([axios.post("https://api.betfair.com/exchange/betting/json-rpc/v1",o,{headers:s}),axios.post("https://scatalog.mysportsfeed.io/api/v1/core/getsports",r)]),n=t.data[0]?.result||[],i=a.data?.sports||[],p={},c={};for(const t of n){p[t.eventType.name.trim().toLowerCase()]=t}for(const t of i){c[t.sportName.trim().toLowerCase()]=t}const d=new Set([...Object.keys(p),...Object.keys(c)]);let l=await Sport.findOne().sort("-position").select("position"),f=l?.position?l.position+1:1;for(const t of d){const e=t.charAt(0).toUpperCase()+t.slice(1),s=p[t]||null,o=c[t]||null,r=await Sport.findOne({sportName:new RegExp(`^${e}$`,"i")});if(r)r.betfairSportList=s,r.sportradarSportList=o,r.timestamp=new Date,r.status=1,await r.save();else{const t=new Sport({sportName:e,position:f++,betfairSportList:s?{isFound:1,message:"Sport found from Betfair",...s}:{isFound:0,message:"No sport found from Betfair"},sportradarSportList:o?{isFound:1,message:"Sport found from Sportradar",...o}:{isFound:0,message:"No sport found from Sportradar"},isBettingEnabled:!1,status:1});await t.save()}}return e.status(200).json({message:"All sports from Betfair and Sportradar synced successfully."})}catch(t){return console.error("Sync error:",t.message),e.status(500).json({message:"Failed to sync sports",error:t.response?.data||t.message})}},exports.getEventsList=async(t,e)=>{const s="https://api.betfair.com/exchange/betting/json-rpc/v1",o=require("axios");try{const t=await Sport.find({betfairSportList:{$ne:null}});for(const e of t){const t=e.betfairSportList?.eventType?.id;if(!t)continue;const r={"X-Application":"fslpapQyGZSmkZW3","X-Authentication":"tXvPCalpouNSP2DpzapbCqNNDMLbl12iuc65vcg8Zf0=","Content-Type":"application/json"},a=[{jsonrpc:"2.0",method:"SportsAPING/v1.0/listEvents",params:{filter:{eventTypeIds:[t],marketStartTime:{from:(new Date).toISOString()}}},id:1}];let n=[],i=0,p="No event found from Betfair";try{const t=await o.post(s,a,{headers:r});n=t.data[0]?.result||[],n.length>0&&(i=1,p="Events fetched successfully")}catch(t){console.error("Error fetching events:",t.message)}const c=[{jsonrpc:"2.0",method:"SportsAPING/v1.0/listCompetitions",params:{filter:{eventTypeIds:[t]}},id:2}];let d={};try{const t=await o.post(s,c,{headers:r});(t.data[0]?.result||[]).forEach((t=>{d[t.competition.id]=t.competition.name}))}catch(t){console.error("Error fetching competitions:",t.message)}const l=[];for(const e of n){const a=e.event;let n=null,i=null;try{const t=[{jsonrpc:"2.0",method:"SportsAPING/v1.0/listMarketCatalogue",params:{filter:{eventIds:[a.id],marketTypeCodes:["MATCH_ODDS"]},maxResults:"1",marketProjection:["COMPETITION"]},id:3}],e=await o.post(s,t,{headers:r}),p=e.data[0]?.result||[];if(p.length>0){n=p[0];const t=[{jsonrpc:"2.0",method:"SportsAPING/v1.0/listMarketBook",params:{marketIds:[n.marketId],priceProjection:{priceData:["EX_BEST_OFFERS"]}},id:4}],e=await o.post(s,t,{headers:r}),a=e.data[0]?.result||[];a.length>0&&(i=a[0])}}catch(t){console.error(`Market data fetch failed for event ${a.id}:`,t.message)}let p=0;if(Array.isArray(i)){const t=i[0];p={marketId:t?.marketId||"",status:t?.status||"",totalMatched:t?.totalMatched||0,runners:Array.isArray(t.runners)?t.runners:[]}}else p="object"==typeof i&&null!==i?{marketId:i.marketId||"",status:i.status||"",totalMatched:i.totalMatched||0,runners:Array.isArray(i.runners)?i.runners:[]}:0;l.push({sportId:t||0,event_id:a.id,name:a.name,event_date:a.openDate,timezone:a.timezone||null,countryCode:a.countryCode||null,isinplay:!0===a.inPlay||new Date(a.openDate)<=new Date?"true":"false",isFancy:"",isBM:"",isPremium:"",score:!0,tv:!1,total_matched:Array.isArray(n)?n[0]?.totalMatched||0:n?.totalMatched||0,position:1,market_count:3,competition:Array.isArray(n)?n[0]?.competition||0:n?.competition||0,marketOdds:p})}const f=await EventList.findOne({sportId:e._id}),m={isFound:i,message:p,events:l};if(f)f.betfairEventList=m,f.timestamp=new Date,await f.save();else{const t=new EventList({FastoddsId:e._id,betfairEventList:m,sportradarEventList:{isFound:0,message:"Sportradar events not fetched yet",events:[]},status:1});await t.save()}}return e.status(200).json({message:"Betfair event list synced successfully for all sports."})}catch(t){return console.error("Event sync error:",t.message),e.status(500).json({message:"Failed to sync Betfair events",error:t.response?.data||t.message})}};