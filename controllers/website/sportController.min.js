// @ts-nocheck
const bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken"),Sport=require("../../models/Sport"),Match=require("../../models/Match"),fs=require("fs"),path=require("path"),axios=require("axios");exports.getAllSportNames=async(e,s)=>{try{const e=await Sport.find({},{displayName:1,icon:1});return s.status(200).json({message:"Sports fetched successfully",data:e})}catch(e){return console.error("Error fetching sports:",e.message),s.status(500).json({message:"Failed to fetch sports",error:e.message})}},exports.getInplayMatches=async(e,s)=>{try{const{sportName:t,sportId:r}=e.params,a={$or:[{isMatchLive:!0},{is_in_play:!0}]};t&&(a.sport_name=t),r&&(a.sportId=r);const o=await Match.find(a).sort({event_date:1});s.status(200).json({message:"In-play matches fetched successfully",count:o.length,data:o})}catch(e){console.error("Error fetching in-play matches:",e),s.status(500).json({message:"Failed to fetch matches",error:e.message})}};