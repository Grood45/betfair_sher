// @ts-nocheck
const bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken"),Sport=require("../../models/Sport"),Match=require("../../models/Match"),fs=require("fs"),path=require("path"),axios=require("axios"),moment=require("moment-timezone"),currentIST=moment().tz("Asia/Kolkata").toDate();exports.getAllSportNames=async(e,t)=>{try{const e=await Sport.find({},{displayName:1,icon:1,position:1}).sort({position:1});return t.status(200).json({message:"Sports fetched successfully",data:e})}catch(e){return console.error("Error fetching sports:",e.message),t.status(500).json({message:"Failed to fetch sports",error:e.message})}},exports.getInplayMatches=async(e,t)=>{try{const{sportName:s,sportId:r}=e.params,o={event_date:{$lte:currentIST}};s&&(o.sport_name=s),r&&(o.sportId=r);const a=await Match.find(o).sort({event_date:1});t.status(200).json({message:"In-play matches fetched successfully",count:a.length,data:a})}catch(e){console.error("Error fetching in-play matches:",e),t.status(500).json({message:"Failed to fetch matches",error:e.message})}};