// @ts-nocheck
const bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken"),Partner=require("../models/Partner"),{generateAccessToken:generateAccessToken,generateRefreshToken:generateRefreshToken}=require("../config/jwt"),cookieOptions={httpOnly:!0,secure:!0,sameSite:"Strict"};exports.create=async(e,t)=>{try{const{partnerName:r,contactPerson:n,email:a,phone:s,websiteDomain:o,commissionPercent:c,startDate:i,endDate:l,status:m,callbackUrls:p,endpoints:u,notes:w}=e.body;if(await Partner.findOne({$or:[{email:a},{phone:s},{websiteDomain:o}]}))return t.status(400).json({error:"A partner with the same email, phone, or website domain already exists."});const d=new Partner({partnerName:r,contactPerson:n,email:a,phone:s,websiteDomain:o,commissionPercent:c,startDate:new Date(i),endDate:l?new Date(l):null,status:m,callbackUrls:p,endpoints:u,notes:w});await d.save(),t.status(201).json({message:"Partner created successfully",data:d})}catch(e){console.error("Error creating partner:",e),t.status(500).json({error:"Internal Server Error"})}};