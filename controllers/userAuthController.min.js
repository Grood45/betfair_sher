// @ts-nocheck
const bcrypt=require("bcryptjs"),jwt=require("jsonwebtoken"),User=require("../models/User"),{generateAccessToken:generateAccessToken,generateRefreshToken:generateRefreshToken}=require("../config/jwt"),cookieOptions={httpOnly:!0,secure:!0,sameSite:"Strict"};exports.registerPage=(e,s)=>{s.render("auth/register")},exports.signUp=async(e,s)=>{const{username:r,password:o,name:n,mobile:t,role:a}=e.body;try{if(await User.findOne({username:r}))return s.status(400).json({error:"Username already exists"});const e=await bcrypt.hash(o,10),c=new User({username:r,password:e,name:n||null,mobile:t||null,role:a||"user",status:1});await c.save();const i=generateAccessToken({id:c._id}),u=generateRefreshToken({id:c._id});s.status(201).json({message:"Signup successful",username:c.username,role:c.role,accessToken:i,refreshToken:u})}catch(e){console.error(e),s.status(500).json({error:"Internal Server Error"})}},exports.loginPage=(e,s)=>{s.render("auth/login")},exports.loginUser=async(e,s)=>{const{login:r,password:o}=e.body;try{const e=await User.findOne({$or:[{username:r},{mobile:r}]});if(!e)return s.status(400).json({error:"User not found"});if(!await bcrypt.compare(o,e.password))return s.status(400).json({error:"Invalid password"});const n=generateAccessToken({id:e._id}),t=generateRefreshToken({id:e._id});s.status(200).json({message:"Login successful",username:e.username,role:e.role,accessToken:n,refreshToken:t})}catch(e){console.error(e),s.status(500).json({error:"Server error"})}},exports.refreshToken=(e,s)=>{const r=e.cookies.refreshToken;if(!r)return s.status(401).json({message:"No refresh token, please login"});try{const e=jwt.verify(r,process.env.JWT_REFRESH_SECRET),o=generateAccessToken({id:e.id,mobile:e.mobile});s.cookie("accessToken",o,{...cookieOptions,maxAge:60*parseInt(process.env.ACCESS_TOKEN_EXPIRES)*1e3||9e5}),s.json({accessToken:o})}catch(e){return console.error(e),s.status(403).json({message:"Invalid refresh token"})}},exports.logout=(e,s)=>{s.clearCookie("refreshToken"),s.clearCookie("accessToken"),s.status(200).json({message:"Logged out successfully"})};